<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2012-2017 DataTorrent, Inc.
  ~ All Rights Reserved.
  ~ The use of this source code is governed by the Limited License located at
  ~ https://www.datatorrent.com/datatorrent-openview-software-license/
  -->
<configuration>

  <property>
    <name>apex.app-param.kafkaBrokerList</name>
    <description>Specify Kafka Broker(s) list. E.g: broker1.com:9092, broker2.com:9093, broker3.com:9094</description>
  </property>
  <property>
    <name>dt.operator.kafkaInput.prop.clusters</name>
    <value>${apex.app-param.kafkaBrokerList}</value>
  </property>

  <property>
    <name>apex.app-param.kafkaTopicName</name>
    <description>Specify topic name of Kafka. E.g: transactions</description>
  </property>
  <property>
    <name>dt.operator.kafkaInput.prop.topics</name>
    <value>${apex.app-param.kafkaTopicName}</value>
  </property>

  <property>
    <name>apex.app-param.initialOffsetOfTopicForKafkaConsumer</name>
    <value>LATEST</value>
    <description>Specify initial offset from the position where Kafka consumer starts reading messages. E.g: LATEST</description>
  </property>
  <property>
    <name>dt.operator.kafkaInput.prop.initialOffset</name>
    <value>${apex.app-param.initialOffsetOfTopicForKafkaConsumer}</value>
  </property>

  <property>
    <name>apex.app-param.FilterConditionForTuples</name>
    <value>({$}.getAmount() >= 20000)</value>
    <description>Specify the filter condition for tuples. E.g: ({$}.getAmount() >= 20000)</description>
  </property>
  <property>
    <name>dt.operator.filter.prop.condition</name>
    <value>${apex.app-param.FilterConditionForTuples}</value>
  </property>

  <property>
    <name>apex.app-param.outputDirectoryPath</name>
    <description>Specify output directory path on HDFS. E.g: hdfs://destination-namenode-service:port/user/dtuser/path-to-output-directory</description>
  </property>
  <property>
    <name>dt.operator.fileOutput.prop.filePath</name>
    <value>${apex.app-param.outputDirectoryPath}</value>
  </property>

  <property>
    <name>apex.app-param.outputFileName</name>
    <description>Specify output directory path on HDFS. E.g: output-file-name.txt</description>
  </property>
  <property>
    <name>dt.operator.fileOutput.prop.outputFileName</name>
    <value>${apex.app-param.outputFileName}</value>
  </property>
  <property>
    <name>apex.app-param.SizeOfFileInBytes</name>
    <description>Specify the size of file in bytes. By default, the size is 128 MB</description>
    <value>134217728</value>
  </property>
  <property>
    <name>dt.operator.fileOutput.prop.maxLength</name>
    <value>${apex.app-param.SizeOfFileInBytes}</value>
  </property>

  <property>
    <name>apex.app-param.csvParserSchema</name>
    <value>{
      "separator": "|",
      "quoteChar": "\"",
      "fields": [
      {
      "name": "accountNumber",
      "type": "Integer"
      },
      {
      "name": "name",
      "type": "String"
      },
      {
      "name": "amount",
      "type": "Integer"
      }
      ]
      }
    </value>
    <description>Specify schema for CSV Parser.</description>
  </property>
  <property>
    <name>dt.operator.csvParser.prop.schema</name>
    <value>${apex.app-param.csvParserSchema}</value>
  </property>

  <property>
    <name>apex.app-param.csvFormatterSchema</name>
    <value>{
      "separator": "|",
      "quoteChar": "\"",
      "fields": [
      {
      "name": "accountNumber",
      "type": "Integer"
      },
      {
      "name": "name",
      "type": "String"
      },
      {
      "name": "amount",
      "type": "Integer"
      }
      ]
      }
    </value>
    <description>Specify schema for CSV Formatter.</description>
  </property>
  <property>
    <name>dt.operator.formatter.prop.schema</name>
    <value>${apex.app-param.csvFormatterSchema}</value>
  </property>

  <property>
    <name>apex.app-param.tupleClassNameForCsvParserOutput</name>
    <value>com.datatorrent.apps.PojoEvent</value>
    <description>Specify tuple class name for csv parser output.</description>
  </property>
  <property>
    <name>dt.operator.csvParser.port.out.attr.TUPLE_CLASS</name>
    <value>${apex.app-param.tupleClassNameForCsvParserOutput}</value>
  </property>

  <property>
    <name>apex.app-param.tupleClassNameForFilterInput</name>
    <value>com.datatorrent.apps.PojoEvent</value>
    <description>Specify tuple class name for filter input.</description>
  </property>
  <property>
    <name>dt.operator.filter.port.input.attr.TUPLE_CLASS</name>
    <value>${apex.app-param.tupleClassNameForFilterInput}</value>
  </property>

  <property>
    <name>apex.app-param.tupleClassNameForFormatterInput</name>
    <value>com.datatorrent.apps.PojoEvent</value>
    <description>Specify tuple class name for formatter input.</description>
  </property>
  <property>
    <name>dt.operator.formatter.port.in.attr.TUPLE_CLASS</name>
    <value>${apex.app-param.tupleClassNameForFormatterInput}</value>
  </property>

  <property>
    <name>apex.app-param.tupleClassNameForTransformInput</name>
    <value>com.datatorrent.apps.PojoEvent</value>
    <description>Specify tuple class name for transform input.</description>
  </property>
  <property>
    <name>dt.operator.transform.port.input.attr.TUPLE_CLASS</name>
    <value>${apex.app-param.tupleClassNameForTransformInput}</value>
  </property>

  <property>
    <name>apex.app-param.tupleClassNameForTransformOutput</name>
    <value>com.datatorrent.apps.PojoEvent</value>
    <description>Specify tuple class name for transform output.</description>
  </property>
  <property>
    <name>dt.operator.transform.port.output.attr.TUPLE_CLASS</name>
    <value>${apex.app-param.tupleClassNameForTransformOutput}</value>
  </property>

</configuration>

