<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2012-2017 DataTorrent, Inc.
  ~ All Rights Reserved.
  ~ The use of this source code is governed by the Limited License located at
  ~ https://www.datatorrent.com/datatorrent-openview-software-license/
  -->
<configuration>

  <property>
    <name>apex.app-param.inputDirectoryOrFilePath</name>
    <description>Specify input path of directory or file. E.g: hdfs://source-namenode-service:port/user/dtuser/path-to-input-directory</description>
  </property>
  <property>
    <name>dt.operator.recordReader.prop.files</name>
    <value>${apex.app-param.inputDirectoryOrFilePath}</value>
  </property>

  <property>
    <name>apex.app-param.outputDirectoryPath</name>
    <description>Specify output directory path on HDFS. E.g: hdfs://destination-namenode-service:port/user/dtuser/path-to-output-directory</description>
  </property>
  <property>
    <name>dt.operator.fileOutput.prop.filePath</name>
    <value>${apex.app-param.outputDirectoryPath}</value>
  </property>

  <property>
    <name>apex.app-param.outputFileName</name>
    <description>Specify output directory path on HDFS. E.g: output-file-name.txt</description>
  </property>
  <property>
    <name>dt.operator.fileOutput.prop.outputFileName</name>
    <value>${apex.app-param.outputFileName}</value>
  </property>

  <property>
    <name>apex.app-param.numberOfReadersForPartitioning</name>
    <value>2</value>
    <description>Specify the number of readers for partitioning.</description>
  </property>

  <property>
    <name>dt.operator.recordReader.prop.minReaders</name>
    <value>${apex.app-param.numberOfReadersForPartitioning}</value>
  </property>
  <property>
    <name>dt.operator.recordReader.prop.maxReaders</name>
    <value>${apex.app-param.numberOfReadersForPartitioning}</value>
  </property>

  <property>
    <name>apex.app-param.numberOfBlocksPerWindow</name>
    <value>1</value>
    <description>Specify number of blocks per window.</description>
  </property>
  <property>
    <name>dt.operator.recordReader.prop.blocksThreshold</name>
    <value>${apex.app-param.numberOfBlocksPerWindow}</value>
  </property>

  <property>
    <name>apex.app-param.blockSizeForHdfsSplitter</name>
    <value>1048576</value>
    <description>Specify block size for HDFS FS splitter.</description>
  </property>
  <property>
    <name>dt.operator.recordReader.prop.blockSize</name>
    <value>${apex.app-param.blockSizeForHdfsSplitter}</value>
  </property>

  <property>
    <name>apex.app-param.csvParserSchema</name>
    <description>Specify schema for CSV Parser.</description>
  </property>
  <property>
    <name>dt.operator.csvParser.prop.schema</name>
    <value>${apex.app-param.csvParserSchema}</value>
  </property>

  <property>
    <name>apex.app-param.csvFormatterSchema</name>
   <description>Specify schema for CSV Formatter.</description>
  </property>
  <property>
    <name>dt.operator.formatter.prop.schema</name>
    <value>${apex.app-param.csvFormatterSchema}</value>
  </property>

  <property>
    <name>apex.app-param.FilterConditionForTuples</name>
    <description>Specify the filter condition for tuples. E.g: ({$}.getAmount() >= 5000)</description>
  </property>
  <property>
    <name>dt.operator.filter.prop.condition</name>
    <value>${apex.app-param.FilterConditionForTuples}</value>
  </property>
  
  <property>
    <name>apex.app-param.transformOutputFieldInfo</name>
    <description>Specify json string with output field name and its data type. Possible values for data types are BOOLEAN,DOUBLE,INTEGER,FLOAT,LONG,SHORT,CHARACTER,STRING,DATE E.g. {"uniqueAdId":"INTEGER","cost":"DOUBLE"}</description>
  </property> 
  <property>
    <name>dt.operator.transform.prop.outputFieldInfo</name>
    <value>${apex.app-param.transformOutputFieldInfo}</value>
  </property>

  <property>
    <name>apex.app-param.transformExpressionInfo</name>
    <description>Specify json string with output field name and expression. E.g. {"uniqueAdId":"{$.adId}","cost":"{$.bidPrice} * 2.0"} </description>
  </property> 
  <property>
    <name>dt.operator.transform.prop.expressionInfo</name>
    <value>${apex.app-param.transformExpressionInfo}</value>
  </property>

</configuration>
