<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2012-2017 DataTorrent, Inc.
  ~ All Rights Reserved.
  ~ The use of this source code is governed by the Limited License located at
  ~ https://www.datatorrent.com/datatorrent-openview-software-license/
  -->
<configuration>

  <property>
    <name>apex.app-param.kafkaBrokerList</name>
    <description>Specify Kafka Broker(s) list. E.g: broker1.com:9092, broker2.com:9093, broker3.com:9094</description>
  </property>
  <property>
    <name>dt.operator.kafkaInput.prop.clusters</name>
    <value>${apex.app-param.kafkaBrokerList}</value>
  </property>

  <property>
    <name>apex.app-param.kafkaInputTopicName</name>
    <description>Specify topic name of Kafka. E.g: transactions</description>
  </property>
  <property>
    <name>dt.operator.kafkaInput.prop.topics</name>
    <value>${apex.app-param.kafkaInputTopicName}</value>
  </property>

  <property>
    <name>apex.app-param.initialOffsetOfTopicForKafkaConsumer</name>
    <value>LATEST</value>
    <description>Specify initial offset from the position where Kafka consumer starts reading messages. E.g: LATEST</description>
  </property>
  <property>
    <name>dt.operator.kafkaInput.prop.initialOffset</name>
    <value>${apex.app-param.initialOffsetOfTopicForKafkaConsumer}</value>
  </property>

  <property>
    <name>apex.app-param.jsonParserFieldInfo</name>
    <description>Specify fields and their data types in Json Format. Possible values for data types are BOOLEAN,DOUBLE,INTEGER,FLOAT,LONG,SHORT,CHARACTER,STRING,DATE E.g {"adId":"INTEGER","adName":"STRING","bidPrice":"DOUBLE"}</description>
  </property>
  <property>
    <name>dt.operator.jsonParser.prop.fieldInfo</name>
    <value>${apex.app-param.jsonParserFieldInfo}</value>
  </property>
  
  <property>
    <name>apex.app-param.FilterConditionForTuples</name>
    <description>Specify the filter condition for tuples. E.g: ({$}.getAmount() >= 20000)</description>
  </property>
  <property>
    <name>dt.operator.filter.prop.condition</name>
    <value>${apex.app-param.FilterConditionForTuples}</value>
  </property>
  
  <property>
    <name>apex.app-param.transformOutputFieldInfo</name>
    <description>Specify json string with output field name and its data type. Possible values for data types are BOOLEAN,DOUBLE,INTEGER,FLOAT,LONG,SHORT,CHARACTER,STRING,DATE E.g. {"uniqueAdId":"INTEGER","cost":"DOUBLE"}</description>
  </property> 
  <property>
    <name>dt.operator.transform.prop.outputFieldInfo</name>
    <value>${apex.app-param.transformOutputFieldInfo}</value>
  </property>

  <property>
    <name>apex.app-param.transformExpressionInfo</name>
    <description>Specify json string with output field name and expression. E.g. {"uniqueAdId":"{$.adId}","cost":"{$.bidPrice} * 1.0"} </description>
  </property> 
  <property>
    <name>dt.operator.transform.prop.expressionInfo</name>
    <value>${apex.app-param.transformExpressionInfo}</value>
  </property>
  
  <property>
    <name>apex.app-param.KafkaOutputTopicName</name>
    <description>Specify Kafka topic name for producer. Eg: transactions</description>
  </property>
  <property>
    <name>dt.operator.kafkaOutput.prop.topic</name>
    <value>${apex.app-param.KafkaOutputTopicName}</value>
  </property>

  <property>
    <name>apex.app-param.kafkaProducerProperties</name>
    <description>Specify Kafka producer properties like broker list, serializer class etc. Eg: serializer.class=kafka.serializer.StringEncoder,producer.type=async,metadata.broker.list=localhost:9092</description>
  </property>
  <property>
    <name>dt.operator.kafkaOutput.prop.producerProperties</name>
    <value>${apex.app-param.kafkaProducerProperties}</value>
  </property>

  <property>
    <name>apex.app-param.numberOfPartitionsForKafkaConsumer</name>
    <value>com.datatorrent.common.partitioner.StatelessPartitioner:1</value>
    <description>Specify number of partitions for kafka consumer.</description>
  </property>
  <property>
    <name>dt.operator.kafkaOutput.attr.PARTITIONER</name>
    <value>${apex.app-param.numberOfPartitionsForKafkaConsumer}</value>
  </property>

</configuration>

